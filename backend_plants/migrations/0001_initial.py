# Generated by Django 5.1.2 on 2024-10-15 15:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plant_Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Класс растения',
                'verbose_name_plural': 'Классы растений',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Рекомендация',
                'verbose_name_plural': 'Рекомендации',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адрес')),
                ('username', models.CharField(default='', max_length=30, verbose_name='Имя пользователя')),
                ('password', models.TextField(max_length=256, verbose_name='Пароль')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('collection_name', models.CharField(default='Название растения', max_length=150)),
                ('image', models.TextField(default='')),
                ('time_create', models.DateField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Черновик'), (1, 'Сформирован'), (2, 'Удалён')], default=0)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plant_name', models.CharField(default='Название растения', max_length=150)),
                ('image', models.TextField(default='')),
                ('general_info', models.CharField(default='Описание растения', max_length=255)),
                ('properties', models.JSONField()),
                ('status', models.CharField(choices=[('a', 'active'), ('d', 'delited')], default='a', max_length=1)),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderator', to=settings.AUTH_USER_MODEL)),
                ('plant_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_plants.plant_class')),
            ],
            options={
                'verbose_name': 'Растение',
                'verbose_name_plural': 'Растения',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CollectionPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_plants.collection')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_plants.plant')),
            ],
            options={
                'verbose_name': 'КоллекцияРастение',
                'verbose_name_plural': 'КоллекцииРастения',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='includes_plants',
            field=models.ManyToManyField(through='backend_plants.CollectionPlant', to='backend_plants.plant'),
        ),
        migrations.AddField(
            model_name='collection',
            name='recommendation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend_plants.recommendation'),
        ),
        migrations.CreateModel(
            name='RecommendationPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_plants.plant')),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_plants.recommendation')),
            ],
            options={
                'verbose_name': 'РекомендацияРастение',
                'verbose_name_plural': 'РекомендацииРастения',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='recommendation',
            name='includes_plants',
            field=models.ManyToManyField(through='backend_plants.RecommendationPlant', to='backend_plants.plant'),
        ),
    ]
